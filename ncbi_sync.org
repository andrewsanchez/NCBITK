* rsync

#+BEGIN_SRC sh :tangle rsync_ncbi

# include="rsync_include.txt"
# exclude="rsync_exclude.txt"
organism="Acinetobacter_nosocomialis" # set this to just "*" for all bacteria
location="bacteria/"$organism"/latest_assembly_versions/"
directory="/home/truthling/MGGen/rsync_Acinetobacter_nosocomialis/" # must be relative; will be created if doesn't already exist
files=".fna.gz"

# figure out which folders to exclude, e.g. unplaced_scaffolds, etc.

rsync -iPrLtm -f="+ *"$files"" -f="+ */" -f="- *" ftp.ncbi.nlm.nih.gov::genomes/genbank/"$location" "$directory"

# these two below produce the same results as the one above
# rsync -iPrLtm -f="+ *"$files"" -f="+ */" -f="- *" ftp.ncbi.nlm.nih.gov::genomes/genbank/"$location" $directory 
# rsync -iPrLtm -f="+ *"$files"" -f="+ */" -f="- *" -f="- all_assembly_versions" ftp.ncbi.nlm.nih.gov::genomes/genbank/"$location" "$directory"

# cp only the files to separate directory for renaming

# Make sure this is only running once, after all files are downloaded.

sudo find "$directory" -type f -exec cp -t '/home/truthling/MGGen/renamed/' -- {} +

# --exclude-from=FILE     read exclude patterns from FILE
# --include-from=FILE     read include patterns from FILE
# -c, --checksum              skip based on checksum, not mod-time & size
# -i, --itemize-changes       output a change-summary for all updates
# -P, --partial, --progress   show progress and put partially downloaded files in a folder
# -r, --recursive             recurse into directories
# -L, --copy-links            transform symlink into referent file/dir
# -t, --times                 preserve modification times
# -m, --prune-empty-dirs      prune empty directory chains from file-list

#+END_SRC
* rename

#+BEGIN_SRC python :tangle rename.py
import pandas as pd
import os

# wget ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria/assembly_summary.txt
summary = '/home/truthling/MGGen/renamed/assembly_summary.txt'
genome_files = '/home/truthling/MGGen/Acinetobacter_nosocomialis/genome_files/'
df = pd.read_csv(summary, delimiter='\t', index_col=0)
copiedfiles = '/home/truthling/MGGen/renamed/'

for f in os.listdir(copiedfiles"):
    if f.startswith('GCA'):
        id = (f.split('_')[0:2])
        id = ('_'.join(id))
        
    for row in df.index:
        if id == row:
            org_name = df.get_value(id, 'organism_name')
            strain = df.get_value(id, 'infraspecific_name').strip('strain=')
            assembly_level = df.get_value(id, 'assembly_level')
            newname = '{}_{}_{}_{}.fasta'.format(id, org_name, strain, assembly_level)
            os.rename(f, newname)
#+END_SRC


* Notes on structure of the ftp site
- The GenBank directory area includes genome sequence data for a larger number of organisms than the RefSeq directory area; however, some assemblies are unannotated.
- ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/assembly_summary_genbank.txt


* Everything below is probably not needed anymore, now that we have rsync.
** lftp
*** Sync with NCBI's ftp server

#+BEGIN_SRC sh :tangle ncbi_sync
# add time stamp to log file
lftp -c 'open -e "mirror -cf - --no-empty-dirs -I *assembly*.txt -P=5 --log=lftp_log.txt /genomes/genbank/bacteria/ ~/MGGen/ncbi_bacteria_mirror" ftp.ncbi.nlm.nih.gov'
#+END_SR

** wget
*** assembly summary for specific organism

#+BEGIN_SRC sh :tangle ncbi_get_organism
wget -O Acinetobacter_nosocomialis_summary.txt ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria/Acinetobacter_nosocomialis/assembly_summary.txt
awk -F "\t" '/Acinetobacter/ {print $20}' Acinetobacter_nosocomialis_summary.txt | \
sed -r 's|(ftp://ftp.ncbi.nlm.nih.gov/genomes/all/)(GCA_.+)|\1\2/\2_genomic.fna.gz|'>genome_urls.txt
wget -P ./genome_files/ --input genome_urls.txt
gunzip ./genome_files/*.gz
#+END_SRC
 
*** assembly summary for all bacteria

Since it downloads every summary as `assembly_summary.txt` in a separate directory named after the bacteria, we will have to copy and rename the files.  The files must remain in the structure that `lftp` puts them in in order to stay synced with NCBI.

#+BEGIN_SRC bash
mkdir bacteria_summaries && cd bacteria_summaries
wget -rl 0 -A "*assembly*.txt" -nH --cut-dirs=3 --no-remove-listing ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria
for subdir in *; do cp ./$subdir/assembly_summary.txt ./renamed/$subdir.txt; done;
#+END_SRC

- It has come to my attention that most organisms (~8K out of 12K) do NOT have a `assembly_summary.txt` file in the expected directory.  Running another test to find out where/if the equivalent file is located.
** Questions

- It is recommended to run the following script in a ~crontab~.  I don't really understand this script and was wondering if it's just as well to simply run ~lftp -c 'open -e "mirror -c -p --no-empty-dirs -I *assembly*.txt -P=5 --log=lftp_log.txt /genomes/genbank/bacteria/ /home/truthling/MGGen/ncbi_bacteria_mirror" ftp.ncbi.nlm.nih.gov'~ in a crontab?

#+BEGIN_SRC shell
#!/bin/bash
login="username"
pass="password"
host="server.feralhosting.com"
remote_dir='~/folder/you/want/to/copy'
local_dir="$HOME/lftp/"

base_name="$(basename "$0")"
lock_file="/tmp/$base_name.lock"
trap "rm -f $lock_file; exit 0" SIGINT SIGTERM
if [ -e "$lock_file" ]
then
    echo "$base_name is running already."
    exit
else
    touch "$lock_file"
    lftp -u $login,$pass $host << EOF
    set ftp:ssl-allow no
    set mirror:use-pget-n 5
    mirror -c -P5 --log="/var/log/$base_name.log" "$remote_dir" "$local_dir"
    quit
EOF
    rm -f "$lock_file"
    trap - SIGINT SIGTERM
    exit
fi
#+END_SRC
